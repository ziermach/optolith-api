export interface ReferencialIntegrityValidators {
    checkLocaleId: (localeId: string) => boolean;
}
export declare const getReferencialIntegrityErrors: <T extends string | number>(ids: T[], check: (id: T) => boolean) => T[];
export declare const getReferencialIntegrityErrorsWith: <T, U extends string | number>(elements: T[], transform: (element: T) => U, check: (id: U) => boolean) => T[];
interface Translatable<T> {
    /**
     * All translations for the entry, identified by IETF language tag (BCP47).
     * @minProperties 1
     */
    translations: {
        [localeId: string]: T;
    };
}
export declare const getReferencialIntegrityErrorsForTranslatable: <T>(translatable: Translatable<T>, checkLocaleId: (id: string) => boolean) => string[];
export {};

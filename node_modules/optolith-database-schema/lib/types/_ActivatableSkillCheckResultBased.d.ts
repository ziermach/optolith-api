/**
 * Defines the derived (unitless) value.
 */
export declare enum CheckResultValue {
    QualityLevels = "QualityLevels",
    SkillPoints = "SkillPoints"
}
/**
 * Defines how the the `value` is set off against the check result.
 */
export declare enum CheckResultArithmetic {
    Multiply = "Multiply",
    Divide = "Divide"
}
export declare type CheckResultBasedModifier = {
    /**
     * The arithmetic how to apply the `value` to the `base`.
     */
    arithmetic: CheckResultArithmetic;
    /**
     * The value that is applied to the `base` using the defined `arithmetic`.
     * @integer
     * @minimum 2
     */
    value: number;
};
/**
 * Defines a parameter being based on a check result.
 */
export declare type CheckResultBased = {
    /**
     * The base value that is derived from the check result.
     */
    base: CheckResultValue;
    /**
     * If defined, it modifies the base value.
     */
    modifier?: CheckResultBasedModifier;
};

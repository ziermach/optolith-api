/**
 * @main Attribute
 */
import { ReferencialIntegrityValidators } from "../validation/integrity.js";
import { LocaleMap } from "./_LocaleMap.js";
import { NonEmptyString } from "./_NonEmptyString.js";
/**
 * @title Attribute
 */
export declare type Attribute = {
    /**
     * The attribute's identifier. An unique, increasing integer.
     * @integer
     * @minimum 1
     */
    id: number;
    /**
     * All translations for the entry, identified by IETF language tag (BCP47).
     */
    translations: LocaleMap<AttributeTranslation>;
};
export declare type AttributeTranslation = {
    /**
     * The attribute's name.
     */
    name: NonEmptyString;
    /**
     * The abbreviation of the attribute's name.
     */
    abbreviation: NonEmptyString;
    /**
     * The description of the attribute.
     */
    description: NonEmptyString;
};
export declare const validateIntegrity: (attribute: Attribute, { checkLocaleId }: ReferencialIntegrityValidators) => string[];
export declare const validateSchema: import("../validation/schema.js").TypeValidator<Attribute>;

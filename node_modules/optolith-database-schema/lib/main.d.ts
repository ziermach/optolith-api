import { TypeMap } from "./config.js";
import { TypeValidationResultErrors } from "./validation/schema.js";
declare type Result = {
    tag: "Ok";
    value: {
        [K in keyof TypeMap]: TypeMap[K][];
    };
} | {
    tag: "Error";
    errors: Record<string, TypeValidationResultErrors>;
};
export declare type EntityDirectoryPaths = {
    [K in keyof TypeMap]: string;
};
export declare const validate: (entityDirPaths: EntityDirectoryPaths, checkIntegrity: boolean) => Promise<Result>;
export declare const printErrors: (errorsByFile: Record<string, TypeValidationResultErrors>, printOptions?: PrintOptions) => string;
export declare type PrintOptions = {
    verbose?: boolean;
};
export {};
